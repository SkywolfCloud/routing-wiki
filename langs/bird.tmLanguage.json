{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "bird2",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#ip-addresses"
    },
    {
      "include": "#vpn-rd"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#symbols"
    },
    {
      "include": "#blocks"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.bird",
          "begin": "#",
          "end": "$",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.bird"
            }
          }
        },
        {
          "name": "comment.block.bird",
          "begin": "/\\*",
          "end": "\\*/",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.begin.bird"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.end.bird"
            }
          }
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.bird",
          "begin": "\"",
          "end": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.bird"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.bird"
            }
          },
          "patterns": [
            {
              "name": "constant.character.escape.bird",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.bird",
          "begin": "'",
          "end": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.bird"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.bird"
            }
          }
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.bird",
          "match": "\\b0x[0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.decimal.bird",
          "match": "\\b[0-9]+\\b"
        },
        {
          "name": "constant.numeric.time.bird",
          "match": "\\b[0-9]+\\s*(s|ms|us)\\b",
          "captures": {
            "1": {
              "name": "keyword.other.unit.bird"
            }
          }
        }
      ]
    },
    "ip-addresses": {
      "patterns": [
        {
          "name": "constant.numeric.ip.ipv4.bird",
          "match": "\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}(?:/[0-9]{1,2})?\\b"
        },
        {
          "name": "constant.numeric.ip.ipv6.bird",
          "match": "\\b(?:[0-9a-fA-F]{0,4}:){2,7}[0-9a-fA-F]{0,4}(?:/[0-9]{1,3})?\\b"
        },
        {
          "name": "constant.numeric.ip.ipv6.bird",
          "match": "::(?:[0-9a-fA-F]{0,4}:){0,6}[0-9a-fA-F]{0,4}(?:/[0-9]{1,3})?\\b"
        },
        {
          "name": "constant.numeric.ip.ipv6.bird",
          "match": "(?:[0-9a-fA-F]{0,4}:){1,6}::(?:[0-9a-fA-F]{0,4}:){0,5}[0-9a-fA-F]{0,4}(?:/[0-9]{1,3})?\\b"
        }
      ]
    },
    "vpn-rd": {
      "name": "constant.numeric.vpn-rd.bird",
      "match": "\\b(?:[0-9]+:[0-9]+|[0-2]:[0-9]+:[0-9]+|(?:[0-9]{1,3}\\.){3}[0-9]{1,3}:[0-9]+)\\b"
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.bird",
          "match": "\\b(?:if|then|else|case|for|while|do|break|continue|return)\\b"
        },
        {
          "name": "keyword.other.protocol.bird",
          "match": "\\b(?:protocol|template|table|filter|function|import|export|static|rip|ospf|bgp|babel|rpki|bfd|device|direct|kernel|pipe|perf|mrt)\\b"
        },
        {
          "name": "keyword.other.define.bird",
          "match": "\\b(?:define|include)\\b"
        },
        {
          "name": "constant.language.boolean.bird",
          "match": "\\b(?:on|off|yes|no|true|false)\\b"
        },
        {
          "name": "keyword.other.flow.bird",
          "match": "\\b(?:flow4|flow6|dst|src|proto|next|header|dport|sport|icmp|type|code|tcp|flags|length|dscp|dont_fragment|is_fragment|first_fragment|last_fragment|fragment|label|offset)\\b"
        },
        {
          "name": "keyword.other.address.bird",
          "match": "\\b(?:port|vpn|mpls|from|max|as|aspa)\\b"
        },
        {
          "name": "keyword.other.config.bird",
          "match": "\\b(?:router|id|hostname|description|debug|log|syslog|stderr|bird|protocols|tables|channels|preference|disabled|graceful|restart|timeouts|passwords|bfd|confederation|cluster|hold|time|keepalive|connect|retry|start|delay|error|wait|forget|scan|stub|cost|hello|interval|dead|neighbors|area|interface|authentication|password|algorithm|md5|sha1|sha256|sha512|hmac|local|remote|multihop|passive|rfc1583compat|tick|min|ls|retransmit|transmit|ack|check|link|state|database|summary|external|nssa|translator|always|candidate|never|role|stability|election|priority|wait|import|limit|action|warn|block|restart|disable|keep|filtered|receive|accept|reject|modify|add|delete|withdraw|unreachable|blackhole|prohibit|unreach|igp_metric|localpref|med|origin|community|large_community|ext_community|as_path|prepend|delete|filter|weight|gateway|scope|onlink|recursive|device|unreachable|prohibit|blackhole|multipath|igp|table|channel|sadr|src|learn|persist|scan|time|graceful|restart|export|limit|exceed|limit|action)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.comparison.bird",
          "match": "(?:==|!=|<=|>=|<|>|=|~|!~)"
        },
        {
          "name": "keyword.operator.logical.bird",
          "match": "(?:&&|\\|\\||!|->)"
        },
        {
          "name": "keyword.operator.arithmetic.bird",
          "match": "(?:\\+|\\-|\\*|/|%)"
        },
        {
          "name": "keyword.operator.range.bird",
          "match": "\\.\\."
        },
        {
          "name": "keyword.operator.assignment.bird",
          "match": "="
        }
      ]
    },
    "symbols": {
      "patterns": [
        {
          "name": "variable.other.bird",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "blocks": {
      "patterns": [
        {
          "name": "meta.block.bird",
          "begin": "\\{",
          "end": "\\}",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.begin.bird"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.end.bird"
            }
          },
          "patterns": [
            {
              "include": "$self"
            }
          ]
        },
        {
          "name": "punctuation.terminator.statement.bird",
          "match": ";"
        },
        {
          "name": "punctuation.separator.bird",
          "match": ","
        },
        {
          "name": "punctuation.definition.group.begin.bird",
          "match": "\\("
        },
        {
          "name": "punctuation.definition.group.end.bird",
          "match": "\\)"
        },
        {
          "name": "punctuation.definition.array.begin.bird",
          "match": "\\["
        },
        {
          "name": "punctuation.definition.array.end.bird",
          "match": "\\]"
        }
      ]
    }
  },
  "scopeName": "source.bird",
  "fileTypes": [
    "bird",
    "bird.conf",
    "bird6.conf"
  ],
  "foldingStartMarker": "\\{\\s*$",
  "foldingStopMarker": "^\\s*\\}"
} 